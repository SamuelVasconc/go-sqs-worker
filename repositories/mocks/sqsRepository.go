// Code generated by mockery v0.0.0-dev. DO NOT EDIT.

package mocks

import (
	"github.com/aws/aws-sdk-go/service/sqs"
	"github.com/stretchr/testify/mock"
)

//SQSRepository ...
type SQSRepository struct {
	mock.Mock
}

//GetMessages ...
func (m *SQSRepository) GetMessages(URL string) ([]*sqs.Message, error) {
	ret := m.Called(URL)

	var r0 []*sqs.Message
	if rf, ok := ret.Get(0).(func(string) []*sqs.Message); ok {
		r0 = rf(URL)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]*sqs.Message)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(string) error); ok {
		r1 = rf(URL)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

//DeleteMessage ...
func (m *SQSRepository) DeleteMessage(URL string, message *sqs.Message) error {
	ret := m.Called(URL, message)

	var r0 error
	if rf, ok := ret.Get(0).(func(string, *sqs.Message) error); ok {
		r0 = rf(URL, message)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

//PublishMessage ...
func (m *SQSRepository) PublishMessage(URL string, message string) error {
	ret := m.Called(URL, message)

	var r0 error
	if rf, ok := ret.Get(0).(func(string, string) error); ok {
		r0 = rf(URL, message)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}
